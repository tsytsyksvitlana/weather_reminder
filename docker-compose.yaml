version: '3.8'

services:
  postgres:
    container_name: db-postgres
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "8111:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_NAME}
    networks:
      - home

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - home

  web:
    build: .
    command: bash -c "python weather_reminder/manage.py makemigrations && python weather_reminder/manage.py migrate && gunicorn weather_reminder.core.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_NAME}
    networks:
      - home

  celery_worker_1:
    build: .
    command: /code/celery_worker_1.sh
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WEB_HOST=${WEB_HOST}
    networks:
      - home

  celery_worker_2:
    build: .
    command: /code/celery_worker_2.sh
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - WEB_HOST=${WEB_HOST}
    networks:
      - home

  flower:
    build: .
    command: celery -A weather_reminder.core flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker_1
      - celery_worker_2
    environment:
      - CELERY_BROKER_URL=redis://${REDIS_HOST}:6379/0
    networks:
      - home

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - flower
    networks:
      - home

  test:
    build: .
    command: pytest -v
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=${TEST_PG_USER}
      - POSTGRES_PASSWORD=${TEST_PG_PASS}
      - POSTGRES_DB=${TEST_PG_NAME}
    networks:
      - home

volumes:
  postgres_data:

networks:
  home:
    external: true
